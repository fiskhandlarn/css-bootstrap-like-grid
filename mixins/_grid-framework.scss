@mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {
  // Common properties for all breakpoints
  %grid-column {
    @include set-col-grid-column(12);
    padding-right: $gutter / 2;
    padding-left: $gutter / 2;
  }

  @for $j from 0 through ($columns - 1) {
    // without infixes
    .row.col-#{$j} { // stylelint-disable-line rscss/class-format
      @include make-row($j);
    }
  }

  @each $breakpoint in map-keys($breakpoints) {
    $infix: breakpoint-infix($breakpoint, $breakpoints);

    // Allow columns to stretch full width below their breakpoints
    @for $i from 1 through $columns {
      .col#{$infix}-#{$i} { // stylelint-disable-line rscss/class-format
        @extend %grid-column;
      }
    }

    @include media-breakpoint-up($breakpoint, $breakpoints) {
      @for $i from 1 through $columns {
        .col#{$infix}-#{$i} { // stylelint-disable-line rscss/class-format
          @include make-col($i, $gutter);
        }
      }

      .order#{$infix}-first { // stylelint-disable-line rscss/class-format
        order: -1;
      }

      .order#{$infix}-last { // stylelint-disable-line rscss/class-format
        order: $columns + 1;
      }

      @for $i from 0 through $columns {
        .order#{$infix}-#{$i} { // stylelint-disable-line rscss/class-format
          order: $i;
        }
      }

      // https://codepen.io/stavros-liaskos/pen/GGRjVZ?editors=1100
      @for $i from 0 through ($columns - 1) {
        @for $j from 0 through ($columns - 1) {
          @if not ($infix == '' and $i == 0) { // Avoid emitting useless .start-0
            .col-start#{$infix}-#{$i}.col#{$infix}-#{$j} { // stylelint-disable-line rscss/class-format
              @include make-col-start($i, $j);
            }
          }
        }
      }

      @for $j from 0 through ($columns - 1) {
        @if not ($infix == '') {
          .row.col#{$infix}-#{$j} { // stylelint-disable-line rscss/class-format
            @include make-row($j);
          }
        }
      }
    }
  }
}
